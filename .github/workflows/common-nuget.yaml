name: Publish Common NuGet Packages

on:
  push:
    branches: ["main"]
    paths:
      - "sevices/Common/**"
      - ".github/workflows/common-nuget.yaml"

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
          source-url: https://nuget.pkg.github.com/YOUR_GITHUB_USERNAME/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.TOKEN }}

      - name: Get Latest Version
        id: get_version
        run: |
          latest_tag=$(git describe --tags --abbrev=0 || echo "v1.0.0")
          version="${latest_tag:1}"
          new_version=$(echo $version | awk -F. '{print $1"."$2"."$3+1}')
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV

      - name: Update Versions in All `.csproj` Files
        run: |
          find . -type f -name "Common.*.csproj" -exec sed -i 's|<Version>.*</Version>|<Version>'"$NEW_VERSION"'</Version>|' {} \;

      - name: Commit Version Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.TOKEN }}@github.com/vytrancao/Construction-Project-Management-Clone.git
          git commit -am "Bump version to $NEW_VERSION" || echo "No changes to commit"
          git tag "v$NEW_VERSION"
          git push origin main --tags

      - name: Restore Dependencies
        run: dotnet restore Common.sln

      - name: Build Solution
        run: dotnet build Common.sln --configuration Release --no-restore

      - name: Pack All Projects
        run: dotnet pack Common.sln --configuration Release --output nupkgs --no-restore --no-build

      - name: Publish to GitHub Packages
        run: dotnet nuget push "nupkgs/*.nupkg" --source "github" --api-key ${{ secrets.TOKEN }}

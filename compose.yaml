services:
  # web:
  #   container_name: cpm_nginx
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./nginx/configuration:/etc/nginx/configuration
  #     - ./nginx/letsencrypt:/etc/nginx/letsencrypt
  #     - ./nginx/templates:/etc/nginx/templates
  #   ports:
  #     - "80:80"
  #   networks:
  #     - cpm_network
  #   command: ["/bin/sh", "-c", "/start-nginx.sh"]
  #   # image: nginx
  #   # volumes:
  #   #   - ./nginx/templates:/etc/nginx/templates
  #   # ports:
  #   #   - "80:80"
  #   # networks:
  #   #   - cpm_network
  #   depends_on:
  #     - keycloak
  #     - idp_service

  keycloak_db:
    container_name: "keycloak_db"
    extends:
      file: common_db.yaml
      service: master_db
    ports:
      - "3005:5432"
    volumes:
      - postgres_keycloak_data:/var/lib/postgresql/data
    networks:
      - cpm_network

  keycloak:
    container_name: cpm_keycloak
    image: quay.io/keycloak/keycloak:latest
    command: ["start-dev"]  
    ports:  
      - 3000:8080
    environment:
      - KC_PROXY_ADDRESS_FORWARDING=true
      - KC_HTTP_ENABLED=true
      - REDIRECT_SOCKET=proxy-https
      - KEYCLOAK_ADMIN=admin  
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres  
      - KC_DB_USERNAME=${DB_USER}  
      - KC_DB_PASSWORD=${DB_PASSWORD}  
      - KC_DB_URL=jdbc:postgresql://keycloak_db:${DB_PORT}/${DB_NAME}
    networks:  
      - cpm_network

  # cpm_ui:
  #   container_name: cpm_ui
  #   build:
  #     context: ./ui
  #     dockerfile: Dockerfile
  #     args:
  #       - AUTH_SECRET="gbBL1r2qFJ80R+/BQdWqe5McYyU52P4DrLnOqbQy580=" # Added by `npx auth`. Read more: https://cli.authjs.dev
  #       - AUTH_KEYCLOAK_ID=security-admin-console
  #       - AUTH_KEYCLOAK_SECRET=VYumVR2aR7gtMDRASsLjWrxGhcasHMMH
  #       - AUTH_KEYCLOAK_ISSUER=http://192.168.49.2:31284/realms/cpm
  #       - NEXTAUTH_URL=http://192.168.49.2:31483/
  #   ports:
  #     - "3001:3000"
  #   networks:
  #     - cpm_network
  kafka:
    image: apache/kafka-native
    ports:
      - "3001:9092"
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:3001,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091
      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:  
      - cpm_network

  kafka_ui:
    image: ghcr.io/kafbat/kafka-ui:latest
    logging:
      driver: none
    ports:
      - 3002:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
    depends_on:
      - kafka
    networks:  
      - cpm_network

  api_gateway:
    container_name: cpm_api_gateway
    build:
      context: ./services
      dockerfile: Dockerfile.Gateway
    ports:
      - 3003:8080
    networks:
      - cpm_network
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      Logging__LogLevel__Default: Information
      Logging__LogLevel__Microsoft.AspNetCore: Warning
      AllowedHosts: "*"
      Keycloak__realm: cpm
      Keycloak__auth-server-url: http://${LOCALHOST_IP}:3000
      Keycloak__ssl-required: none
      Keycloak__resource: security-admin-console
      Keycloak__verify-token-audience: false
      Keycloak__credentials__secret: AQxvxHNXn9RFvtB9HYq2BYcgU3Njh9bt
      Keycloak__confidential-port: 0
      Keycloak__DefaultPassword: "123"
    depends_on:
      - idp_service

networks:
  cpm_network:
    name: cpm_network
    external: true

volumes:
  postgres_keycloak_data: